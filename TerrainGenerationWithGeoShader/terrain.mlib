<?xml version="1.0" ?>
<materialLib name="TerrainLib">

	<shaders>
		<shader name="terrain_shader" 	ps="Shaders/terrain.frag" 
										gs="Shaders/terrain.geom" 
										vs="Shaders/terrain.vert" />

		<shader name="water_shader" 	ps="Shaders/water.frag" 
										vs="Shaders/water.vert" />

		<shader name="sky_shader" 		ps="Shaders/sky.frag"
										vs="Shaders/sky.vert" />
	</shaders>

	<states>
		<state name="cullFront">
			<CULL_TYPE value="FRONT" />
		</state>

		<state name="Transparent">
			<ORDER value="2" />
			<BLEND value=true />
			<BLEND_SRC value="SRC_ALPHA" />
			<BLEND_DST value="ONE_MINUS_SRC_ALPHA" />		
		</state>
	</states>

	<materials>
		<material name="terrain_mat" >
			<shader name="terrain_shader" >
				<values>
					<valueof uniform="m_pvm" 	type="RENDERER" context="CURRENT" 
												component="PROJECTION_VIEW_MODEL"  />
					
					<valueof uniform="cam_pos" 	type="CAMERA" context="CURRENT" 
												component="POSITION"  />

					<valueof uniform="m_viewModel" 	type="RENDERER" context="CURRENT" 
													component="VIEW_MODEL"  />	
													
					<valueof uniform="m_normal" type="RENDERER" context="CURRENT" 
												component="NORMAL"  />	
												
					<valueof uniform="m_view" 	type="RENDERER" context="CURRENT" 
												component="VIEW"  />	

					<valueof uniform="scale" 	type="RENDERER" context="CURRENT" 
												component="scale"  />

					<valueof uniform="amplitude" 	type="RENDERER" context="CURRENT" 
												component="amplitude"  />

					<valueof uniform="lacunarity" 	type="RENDERER" context="CURRENT" 
													component="lacunarity"/>

					<valueof uniform="gain" 		type="RENDERER" context="CURRENT" 
													component="gain"/>

					<valueof uniform="frequency" 	type="RENDERER" context="CURRENT" 
													component="frequency"/>

					<valueof uniform="octaves" 	type="RENDERER" context="CURRENT" 
												component="octaves"  />

					<valueof uniform="fog_density" 	type="RENDERER" context="CURRENT" 
													component="fog_density"  />

					<valueof uniform="min_h" 		type="RENDERER" context="CURRENT" 
													component="min_h"  />

					<valueof uniform="firstColor"	type="RENDERER" context="CURRENT"
													component="firstColor"/>

					<valueof uniform="secondColor"	type="RENDERER" context="CURRENT"
													component="secondColor"/>

					<valueof uniform="thirdColor"	type="RENDERER" context="CURRENT"
													component="thirdColor"/>

					<valueof uniform="fourthColor"	type="RENDERER" context="CURRENT"
													component="fourthColor"/>

					<valueof uniform="firstLayer" 	type="RENDERER" context="CURRENT" 
													component="firstLayer"  />

					<valueof uniform="secondLayer" 	type="RENDERER" context="CURRENT" 
													component="secondLayer"  />

					<valueof uniform="thirdLayer" 	type="RENDERER" context="CURRENT" 
													component="thirdLayer"  />
												
					<valueof uniform="l_dir"	type="LIGHT" context="CURRENT"
												component="DIRECTION" id=0/>
				
					<valueof uniform="fogColor"		type="RENDERER" context="CURRENT"
													component="fogColor"/>
				</values>
			</shader>
		</material>

		<material name="water_mat" >
			<shader name="water_shader" >
				<values>
					<valueof uniform="m_pvm" 	type="RENDERER" context="CURRENT" 
												component="PROJECTION_VIEW_MODEL"  />
					
					<valueof uniform="cam_pos" 	type="CAMERA" context="CURRENT" 
												component="POSITION"  />

					<valueof uniform="m_viewModel" 	type="RENDERER" context="CURRENT" 
													component="VIEW_MODEL"  />	
													
					<valueof uniform="m_normal" type="RENDERER" context="CURRENT" 
												component="NORMAL"  />	
												
					<valueof uniform="m_view" 	type="RENDERER" context="CURRENT" 
												component="VIEW"  />

					<valueof uniform="opacity" 	type="RENDERER" context="CURRENT" 
												component="opacity"  />

					<valueof uniform="scale" 	type="RENDERER" context="CURRENT" 
												component="scale"  />

					<valueof uniform="min_h" 		type="RENDERER" context="CURRENT" 
													component="min_h"  />

					<valueof uniform="secondLayer" 	type="RENDERER" context="CURRENT" 
													component="secondLayer"  />
												
					<valueof uniform="l_dir"	type="LIGHT" context="CURRENT"
												component="DIRECTION" id=0/>

					<valueof uniform="waterColor"	type="RENDERER" context="CURRENT"
													component="waterColor"/>
					
					<valueof uniform="noWater" 		type="RENDERER" context="CURRENT" 
													component="noWater"  />

					<valueof uniform="fogColor"		type="RENDERER" context="CURRENT"
													component="fogColor"/>
				</values>
			</shader>
			<state name="Transparent"/>
		</material>

		<material name="sky_mat">
			<shader name="sky_shader">
				<values>
					<valueof uniform="m_pvm"  	type="RENDERER" context="CURRENT" 
							 					component="PROJECTION_VIEW_MODEL" />

					<valueof uniform="skyColor"	type="RENDERER" context="CURRENT"
													component="skyColor"/>
				</values>
			</shader>
		</material>

	</materials>
	
</materialLib>